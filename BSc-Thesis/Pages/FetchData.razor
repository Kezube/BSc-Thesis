@page "/fetchdata"
@using BSc_Thesis.Data
@using BSc_Thesis.DataBase.Models
@using BSc_Thesis.DataBase.Stores
@using Blazorise

<PageTitle>Weather forecast</PageTitle>


@inject WeatherForecastService ForecastService
@inject ProcessStore ProcessStore

<h1>Process table</h1>

<p>Wpisz coś mądręgo :).</p>
<p>
    <label>
        <TextEdit Placeholder="Wpisz coś ..." TextChanged="Refresh"/>
    </label>
</p>

<p role="status">Current string: @InputValue</p>
@*<button class="btn btn-primary" @onclick="Refresh">Click me</button>*@

@if (processDbs == null)
{
    <p><em>Loading...</em></p>
}
@if (flag == true)
{
    <p><em>Dane poprawne</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                @*<th>ID</th>*@
                <th>Temp (C)</th>
                <th>Temp Sheath (C)</th>
                <th>Glucose (g/l)</th>
                <th>Maltose (g/l)</th>
                <th>Suger (g/l)</th>
                <th>Maltotriosis (g/l)</th>
                <th>Yeast Active (g/l)</th>
                <th>Yeast Lag (g/l)</th>
                <th>Yeast Dead (g/l)</th>
                <th>Ethanol (g/l)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var processDb in processDbs)
            {
                <tr>
                    @*<td>@processDb.ID</td>*@
                    <td>@processDb.Temperatura</td>
                    <td>@processDb.TemperaturaOtoczenia</td>
                    <td>@processDb.Glukoza</td>
                    <td>@processDb.Maltoza</td>
                    <td>@processDb.Maltortioza</td>
                    <td>@processDb.Cukier</td>
                    <td>@processDb.DrozdzeAktywne</td>
                    <td>@processDb.DrozdzeLatecyjne</td>
                    <td>@processDb.DrozdzeMartwe</td>
                    <td>@processDb.Etanol</td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string? InputValue { get; set; }
    private double val;
    private bool flag = false;
    private ProcessDb[] processDbs;

    protected override async Task OnInitializedAsync()
    {
        processDbs = await ProcessStore.GetAllRows();
    }



    private async void Refresh(string value)
    {
        InputValue = value;
        flag = false;
        try
        {
            val = Convert.ToDouble(InputValue);
            processDbs = await ProcessStore.GetProcessLessThenTempValue(val);
        }
        catch (Exception)
        {
            processDbs = await ProcessStore.GetAllRows();
            flag = true;

            
        }
        
    }
}
